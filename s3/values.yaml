## minio mode, i.e. standalone or distributed
mode: distributed

rootUser: "USERNAME"
rootPassword: "PASSWORD"

# Number of drives attached to a node
drivesPerNode: 2
# Number of MinIO containers running
replicas: 8
# Number of expanded MinIO clusters
pools: 1

## Enable persistence using Persistent Volume Claims
persistence:
  enabled: true

resources:
  requests:
    memory: 100Mi

users: []

## List of buckets to be created after minio install
buckets:
  - name: media
    policy: none
    purge: false
    versioning: false
    objectlocking: false

## Use this field to add environment variables relevant to MinIO server. These fields will be passed on to MinIO container(s)
## when Chart is deployed
environment:
  MINIO_STORAGE_CLASS_STANDARD: EC:8
  MINIO_PROMETHEUS_URL: http://prometheus-k8s.monitoring.svc.cluster.local:9090
  MINIO_PROMETHEUS_JOB_ID: minio

## Specify the service account to use for the MinIO pods. If 'create' is set to 'false'
## and 'name' is left unspecified, the account 'default' will be used.
serviceAccount:
  create: true
  ## The name of the service account to use. If 'create' is 'true', a service account with that name
  ## will be created.
  name: "minio-sa"

metrics:
  serviceMonitor:
    enabled: true
    # scrape each node/pod individually for additional metrics
    includeNode: true
    public: true
    additionalLabels: {}
    annotations: {}
    # for node metrics
    relabelConfigs: {}
    # for cluster metrics
    relabelConfigsCluster: {}
      # metricRelabelings:
      #   - regex: (server|pod)
    #     action: labeldrop
    namespace: monitoring
    # Scrape interval, for example `interval: 30s`
    interval: ~
    # Scrape timeout, for example `scrapeTimeout: 10s`
    scrapeTimeout: ~
